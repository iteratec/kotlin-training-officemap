image: openjdk:8-jdk

cache:
  paths:
  - .gradle/wrapper
  - .gradle/caches

variables:
  DOCKER_HOST: tcp://localhost:2375/
  DOCKER_DRIVER: overlay2

services:
- name: docker:dind

stages:
- build
- deploy

gradle-build:
  stage: build
  before_script:
  - apt-get update
  - apt-get -y install apt-transport-https ca-certificates curl gnupg2 software-properties-common
  - curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo "$ID")/gpg > /tmp/dkey; apt-key add /tmp/dkey
  - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo "$ID") $(lsb_release -cs) stable"
  - apt-get update
  - apt-get -y install docker-ce
  script:
  - docker run --rm --name test_db --publish 5532:5432 --env POSTGRES_PASSWORD=test_db --env POSTGRES_USER=test_db --detach postgres:10.5
  - ./gradlew check build
  after_script:
  - docker rm -f test_db
  artifacts:
    paths:
    - build/libs
    expire_in: 1h

docker-deploy:
  stage: deploy
  only:
  - master
  image: docker:stable
  dependencies:
  - gradle-build
  script:
  - docker login --username "$CI_REGISTRY_USERNAME" --password "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY_URL"
  - docker build --tag docker.iteratec.io/office-map/office-map .
  - docker push docker.iteratec.io/office-map/office-map
